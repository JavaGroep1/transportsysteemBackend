name: Maven build and Docker push

on:
 workflow_dispatch:
 
 push:
  branches: [ main ]
jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [14 ]
    name: Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@master
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: mvn -f ./BackofficeBackend/pom.xml clean compile
  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build Maven project
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: '14.0.2'
    - name: Build and test project
      run: mvn -f ./BackofficeBackend/pom.xml clean verify
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: ./BackofficeBackend/target/backofficeapi-0.0.1-SNAPSHOT.jar
  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Build Docker container and deploy to Kubernetes
    steps:
    - uses: actions/checkout@v1
    - name: Download Maven build artifact
      uses: actions/download-artifact@v1
      with:
        name: artifact
    - name: Build Docker container
      run: |
        mkdir -p BackofficeBackend/target
        mv artifact/backofficeapi-0.0.1-SNAPSHOT.jar BackofficeBackend/target
    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Container image
      run: docker build -t ${{ secrets.DOCKER_REPO }}:GitHub ./BackofficeBackend
    - name: Publish Docker image
      run: docker push ${{ secrets.DOCKER_REPO }}
